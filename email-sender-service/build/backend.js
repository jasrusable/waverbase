require("source-map-support").install();
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(1);
	module.exports = __webpack_require__(2);


/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = require("babel-polyfill");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _mailgunJs = __webpack_require__(3);
	
	var _mailgunJs2 = _interopRequireDefault(_mailgunJs);
	
	var _thrift = __webpack_require__(4);
	
	var _thrift2 = _interopRequireDefault(_thrift);
	
	var _es6Promisify = __webpack_require__(5);
	
	var _es6Promisify2 = _interopRequireDefault(_es6Promisify);
	
	var _emailSender = __webpack_require__(6);
	
	var _emailSender2 = _interopRequireDefault(_emailSender);
	
	var _winston = __webpack_require__(7);
	
	var _winston2 = _interopRequireDefault(_winston);
	
	var _assert = __webpack_require__(8);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// const API_KEY = 'key-18acefbb0db248da44accc2018281765';
	// const DOMAIN = 'sandboxa96b81d3f5644263a37223d4acc98058.mailgun.org';
	
	var mailgun = (0, _mailgunJs2.default)({ apiKey: process.env.MAILGUN_API_KEY, domain: process.env.MAILGUN_DOMAIN });
	
	var handler = {
	  sendEmail: function sendEmail(fromAddress, toAddress, subject, body, result) {
	    _winston2.default.info('Sending email from ' + fromAddress + ' to ' + toAddress);
	    var messages = mailgun.messages();
	    (0, _es6Promisify2.default)(messages.send).bind(messages)({
	      to: toAddress,
	      from: fromAddress,
	      subject: subject,
	      text: body
	    }).then(function (body) {
	      _winston2.default.info(body);
	      result(null, null);
	    }).catch(function (error) {
	      _winston2.default.error(error);
	      result(null, error);
	    });
	  }
	};
	
	var server = _thrift2.default.createServer(_emailSender2.default, handler);
	
	server.listen(process.env.EMAIL_SENDER_SERVICE_PORT);
	_winston2.default.info('Thrift server running on port', process.env.EMAIL_SENDER_SERVICE_PORT);

/***/ },
/* 3 */
/***/ function(module, exports) {

	module.exports = require("mailgun-js");

/***/ },
/* 4 */
/***/ function(module, exports) {

	module.exports = require("thrift");

/***/ },
/* 5 */
/***/ function(module, exports) {

	module.exports = require("es6-promisify");

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	//
	// Autogenerated by Thrift Compiler (0.9.1)
	//
	// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
	//
	var Thrift = __webpack_require__(4).Thrift;
	
	// module.exports types statement removed.
	
	//
	// Autogenerated by Thrift Compiler (0.9.1)
	//
	// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
	//
	var Thrift = __webpack_require__(4).Thrift;
	
	// require() types statement removed.
	//HELPER FUNCTIONS AND STRUCTURES
	
	EmailSender_sendEmail_args = function(args) {
	  this.fromAddress = null;
	  this.toAddress = null;
	  this.subject = null;
	  this.body = null;
	  if (args) {
	    if (args.fromAddress !== undefined) {
	      this.fromAddress = args.fromAddress;
	    }
	    if (args.toAddress !== undefined) {
	      this.toAddress = args.toAddress;
	    }
	    if (args.subject !== undefined) {
	      this.subject = args.subject;
	    }
	    if (args.body !== undefined) {
	      this.body = args.body;
	    }
	  }
	};
	EmailSender_sendEmail_args.prototype = {};
	EmailSender_sendEmail_args.prototype.read = function(input) {
	  input.readStructBegin();
	  while (true)
	  {
	    var ret = input.readFieldBegin();
	    var fname = ret.fname;
	    var ftype = ret.ftype;
	    var fid = ret.fid;
	    if (ftype == Thrift.Type.STOP) {
	      break;
	    }
	    switch (fid)
	    {
	      case 1:
	      if (ftype == Thrift.Type.STRING) {
	        this.fromAddress = input.readString();
	      } else {
	        input.skip(ftype);
	      }
	      break;
	      case 2:
	      if (ftype == Thrift.Type.STRING) {
	        this.toAddress = input.readString();
	      } else {
	        input.skip(ftype);
	      }
	      break;
	      case 3:
	      if (ftype == Thrift.Type.STRING) {
	        this.subject = input.readString();
	      } else {
	        input.skip(ftype);
	      }
	      break;
	      case 4:
	      if (ftype == Thrift.Type.STRING) {
	        this.body = input.readString();
	      } else {
	        input.skip(ftype);
	      }
	      break;
	      default:
	        input.skip(ftype);
	    }
	    input.readFieldEnd();
	  }
	  input.readStructEnd();
	  return;
	};
	
	EmailSender_sendEmail_args.prototype.write = function(output) {
	  output.writeStructBegin('EmailSender_sendEmail_args');
	  if (this.fromAddress !== null && this.fromAddress !== undefined) {
	    output.writeFieldBegin('fromAddress', Thrift.Type.STRING, 1);
	    output.writeString(this.fromAddress);
	    output.writeFieldEnd();
	  }
	  if (this.toAddress !== null && this.toAddress !== undefined) {
	    output.writeFieldBegin('toAddress', Thrift.Type.STRING, 2);
	    output.writeString(this.toAddress);
	    output.writeFieldEnd();
	  }
	  if (this.subject !== null && this.subject !== undefined) {
	    output.writeFieldBegin('subject', Thrift.Type.STRING, 3);
	    output.writeString(this.subject);
	    output.writeFieldEnd();
	  }
	  if (this.body !== null && this.body !== undefined) {
	    output.writeFieldBegin('body', Thrift.Type.STRING, 4);
	    output.writeString(this.body);
	    output.writeFieldEnd();
	  }
	  output.writeFieldStop();
	  output.writeStructEnd();
	  return;
	};
	
	EmailSender_sendEmail_result = function(args) {
	};
	EmailSender_sendEmail_result.prototype = {};
	EmailSender_sendEmail_result.prototype.read = function(input) {
	  input.readStructBegin();
	  while (true)
	  {
	    var ret = input.readFieldBegin();
	    var fname = ret.fname;
	    var ftype = ret.ftype;
	    var fid = ret.fid;
	    if (ftype == Thrift.Type.STOP) {
	      break;
	    }
	    input.skip(ftype);
	    input.readFieldEnd();
	  }
	  input.readStructEnd();
	  return;
	};
	
	EmailSender_sendEmail_result.prototype.write = function(output) {
	  output.writeStructBegin('EmailSender_sendEmail_result');
	  output.writeFieldStop();
	  output.writeStructEnd();
	  return;
	};
	
	EmailSenderClient = exports.Client = function(output, pClass) {
	    this.output = output;
	    this.pClass = pClass;
	    this.seqid = 0;
	    this._reqs = {};
	};
	EmailSenderClient.prototype = {};
	EmailSenderClient.prototype.sendEmail = function(fromAddress, toAddress, subject, body, callback) {
	  this.seqid += 1;
	  this._reqs[this.seqid] = callback;
	  this.send_sendEmail(fromAddress, toAddress, subject, body);
	};
	
	EmailSenderClient.prototype.send_sendEmail = function(fromAddress, toAddress, subject, body) {
	  var output = new this.pClass(this.output);
	  output.writeMessageBegin('sendEmail', Thrift.MessageType.CALL, this.seqid);
	  var args = new EmailSender_sendEmail_args();
	  args.fromAddress = fromAddress;
	  args.toAddress = toAddress;
	  args.subject = subject;
	  args.body = body;
	  args.write(output);
	  output.writeMessageEnd();
	  return this.output.flush();
	};
	
	EmailSenderClient.prototype.recv_sendEmail = function(input,mtype,rseqid) {
	  var callback = this._reqs[rseqid] || function() {};
	  delete this._reqs[rseqid];
	  if (mtype == Thrift.MessageType.EXCEPTION) {
	    var x = new Thrift.TApplicationException();
	    x.read(input);
	    input.readMessageEnd();
	    return callback(x);
	  }
	  var result = new EmailSender_sendEmail_result();
	  result.read(input);
	  input.readMessageEnd();
	
	  callback(null)
	};
	EmailSenderProcessor = exports.Processor = function(handler) {
	  this._handler = handler
	}
	EmailSenderProcessor.prototype.process = function(input, output) {
	  var r = input.readMessageBegin();
	  if (this['process_' + r.fname]) {
	    return this['process_' + r.fname].call(this, r.rseqid, input, output);
	  } else {
	    input.skip(Thrift.Type.STRUCT);
	    input.readMessageEnd();
	    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
	    output.writeMessageBegin(r.fname, Thrift.MessageType.Exception, r.rseqid);
	    x.write(output);
	    output.writeMessageEnd();
	    output.flush();
	  }
	}
	
	EmailSenderProcessor.prototype.process_sendEmail = function(seqid, input, output) {
	  var args = new EmailSender_sendEmail_args();
	  args.read(input);
	  input.readMessageEnd();
	  this._handler.sendEmail(args.fromAddress, args.toAddress, args.subject, args.body, function (err, result) {
	    var result = new EmailSender_sendEmail_result((err != null ? err : {success: result}));
	    output.writeMessageBegin("sendEmail", Thrift.MessageType.REPLY, seqid);
	    result.write(output);
	    output.writeMessageEnd();
	    output.flush();
	  })
	}
	
	
	
	/*** EXPORTS FROM exports-loader ***/
	exports["Processor"] = (EmailSenderProcessor);

/***/ },
/* 7 */
/***/ function(module, exports) {

	module.exports = require("winston");

/***/ },
/* 8 */
/***/ function(module, exports) {

	module.exports = require("assert");

/***/ }
/******/ ]);
//# sourceMappingURL=backend.js.map